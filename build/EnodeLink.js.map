{"version":3,"file":"EnodeLink.js","sourceRoot":"","sources":["../src/EnodeLink.ts"],"names":[],"mappings":"AAAA,OAAO,EAAqB,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AAE3E,OAAO,EAAE,oBAAoB,EAAE,MAAM,aAAa,CAAC;AAEnD,MAAM,CAAC,MAAM,SAAS,GACpB,mBAAmB,CAAqB,kBAAkB,CAAC,CAAC;AAE9D;;;;GAIG;AACH,MAAM,UAAU,cAAc,CAC5B,QAA2D;IAE3D,OAAO,SAAS,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,KAAK,EAAE,EAAE,CAC3D,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,YAAY,CAAC,CACzC,CAAC;AACJ,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,KAAa;IACrC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACxB,CAAC","sourcesContent":["import { EventSubscription, requireNativeModule } from \"expo-modules-core\";\nimport { EnodeLinkSDKModule, ResultCode } from \"./types\";\nimport { ON_RESULT_EVENT_NAME } from \"./constants\";\n\nexport const enodeLink =\n  requireNativeModule<EnodeLinkSDKModule>(\"ExpoEnodeLinkSDK\");\n\n/**\n * @deprecated Will be removed in favor of using the `EnodeLink` event emitter, together with `useEvent` and `useEventListener`.\n * @param onResult\n * @returns {EventSubscription}\n */\nexport function listenToResult(\n  onResult: (code: ResultCode, errorMessage?: string) => void\n): EventSubscription {\n  return enodeLink.addListener(ON_RESULT_EVENT_NAME, (event) =>\n    onResult(event.code, event.errorMessage)\n  );\n}\n\nexport function startLink(token: string) {\n  enodeLink.show(token);\n}\n"]}